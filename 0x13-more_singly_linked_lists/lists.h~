#ifndef LISTS_H
#define LISTS_H

#include <stdio.h>
#include <stdlib.h>

/**
 * struct listint_s - singly linked list
 * @n: integer
 * @next: points to the next node
 *
 * Description: singly linked list node structure
 * for a custom project
 */
typedef struct listint_s
{
	int n;
	struct listint_s *next;
} listint_t;

size_t custom_print_listint(const listint_t *h);
size_t custom_listint_len(const listint_t *h);
listint_t *custom_add_nodeint(listint_t **head, const int n);
listint_t *custom_add_nodeint_end(listint_t **head, const int n);
void custom_free_listint(listint_t *head);
void custom_free_listint2(listint_t **head);
int custom_pop_listint(listint_t **head);
listint_t *custom_get_nodeint_at_index(listint_t *head, unsigned int index);
int custom_sum_listint(listint_t *head);
listint_t *custom_insert_nodeint_at_index(listint_t **head, unsigned int idx, int n);
int custom_delete_nodeint_at_index(listint_t **head, unsigned int index);
listint_t *custom_reverse_listint(listint_t **head);
size_t custom_print_listint_safe(const listint_t *head);
size_t custom_free_listint_safe(listint_t **h);
listint_t *custom_find_listint_loop(listint_t *head);

#endif
